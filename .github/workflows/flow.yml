# Workflow para ejecutar pruebas e2e con WebdriverIO

name: E2E Tests

# Controla cuándo se ejecutará el workflow
on:
  # Activa el workflow en eventos de push o pull request pero solo para la rama "main"
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Permite ejecutar este workflow manualmente desde la pestaña Actions
  workflow_dispatch:

# Una ejecución de workflow está compuesta por uno o más trabajos que pueden ejecutarse secuencialmente o en paralelo
jobs:
  e2e-tests:
    # Cambiado el ejecutor de ubuntu-latest a windows-latest
    runs-on: windows-latest

    # Los pasos representan una secuencia de tareas que se ejecutarán como parte del trabajo
    steps:
      # Hace checkout de tu repositorio bajo $GITHUB_WORKSPACE, para que tu trabajo pueda acceder a él
      - uses: actions/checkout@v4

      # Configura Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      # Instala Allure Command Line
      - name: Install Allure Command Line
        run: npm install -g allure-commandline
          
      # Instala dependencias
      - name: Install dependencies
        working-directory: ./shoopingCart
        run: npm install
      
      # Limpia reportes de Allure anteriores
      - name: Clean Allure reports
        working-directory: ./shoopingCart
        run: npm run allure:clean
        
      # Ejecuta las pruebas e2e
      - name: Run e2e tests
        working-directory: ./shoopingCart
        run: npm run e2e
        
      # Genera reportes de Allure
      - name: Generate Allure reports
        working-directory: ./shoopingCart
        run: npm run allure:generate
        
      # Guarda los reportes como artefactos
      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./shoopingCart/allure-report
          retention-days: 7
          
      # Guarda los screenshots como artefactos
      - name: Archive screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ./shoopingCart/screenshots/**
          retention-days: 7